# The values indicate the changes made to execute the application locally.
# Refer to the .env.example file from the project repository to get complete list of values. Also, the documentation
# contains more information about the environment variables.

HOST=0.0.0.0
PORT=3080
UID=root
GID=root

GROQ_API_KEY=

# https://github.com/danny-avila/LibreChat/discussions/4744
# The values can be generated via Toolkit provided by librechat
# Toolkit: https://www.librechat.ai/toolkit/creds_generator
CREDS_KEY=f34be427ebb29de8d88c107a71546019685ed8b241d8f2ed00c3df97ad2566f0
CREDS_IV=e2341419ec3dd3d19b13a1a87fafcbfb
JWT_SECRET=cfb8587d55fca2b4465095700cc51c36146c05a69e5819d044cf5c4cfb19c82c
JWT_REFRESH_SECRET=c46d08893288810f06aaa1b5e87efd4af026d509a39715b897aab06424441045
MEILI_MASTER_KEY=5f97d04d7eae7f0a5e38ad99d46405c1

ALLOW_REGISTRATION=true
ALLOW_EMAIL_LOGIN=true
ALLOW_SOCIAL_LOGIN=false
ALLOW_SOCIAL_REGISTRATION=false
ALLOW_PASSWORD_RESET=false
ALLOW_ACCOUNT_DELETION=true
ALLOW_UNVERIFIED_EMAIL_LOGIN=true


DEBUG_LOGGING=false
DEBUG_CONSOLE=false

MONGO_URI=mongodb://mongodb:27017/LibreChat
# Enable Meili Search
# https://www.librechat.ai/docs/configuration/meilisearch
# Comment the below two lines to disable Meili Search.
SEARCH = true
MEILI_HOST=http://meilisearch:7700

# Comment out the below RAG related env vars to skip using RAG based operations.
# Make sure librechat.yaml is configured to disable file uploads to avoid errors. 
RAG_PORT=${RAG_PORT:-8000}
RAG_API_URL=http://rag_api:${RAG_PORT:-8000}


#=================#
#   AWS Bedrock   #
#=================#

BEDROCK_AWS_DEFAULT_REGION=us-east-1 # A default region must be provided
BEDROCK_AWS_ACCESS_KEY_ID=
BEDROCK_AWS_SECRET_ACCESS_KEY=


BEDROCK_AWS_MODELS=us.anthropic.claude-3-5-haiku-20241022-v1:0,us.anthropic.claude-3-5-sonnet-20241022-v2:0


#==================================================#
#                        RAG                       #
#==================================================#
# More info: https://www.librechat.ai/docs/configuration/rag_api
# For complete list of environment variables, refer to the main repository of rag_api
# https://github.com/danny-avila/rag_api/?tab=readme-ov-file#environment-variables

# RAG_USE_FULL_CONTEXT=
RAG_AZURE_OPENAI_ENDPOINT=https://iz-genai-polarion-openai.openai.azure.com
RAG_AZURE_OPENAI_API_KEY=
RAG_AZURE_OPENAI_API_VERSION=2024-08-01-preview
EMBEDDINGS_PROVIDER=azure
EMBEDDINGS_MODEL=text-embedding-3-small

# Create a custom Agent adding Google Search tool to leverage internet to generate responses for queries.

# You first need to create a programmable search engine and get the search engine ID: 
# https://developers.google.com/custom-search/docs/tutorial/creatingcse
# Then you can get the API key, click the “Get a key” button on this page: 
# https://developers.google.com/custom-search/v1/introduction

# Google
#-----------------
GOOGLE_SEARCH_API_KEY=
GOOGLE_CSE_ID=